package main;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Random;

import room.CleanRoom;
import room.Point;
import room.Room;
import room.RoomStatus;
import room.ThingsInRoom;
import vacuum.*;
import diagnostics.*;
//Main class to test running the vacuum
public class RunVacuum {

	public static void main(String[] args) {
			ArrayList<String> powerLog= new ArrayList<String>();
			ArrayList<String> storageLog= new ArrayList<String>();
			HashMap<Point,RoomStatus> room = new HashMap<Point,RoomStatus>(); 
			for(int i=0;i<=100;i++){
				for (int j =0;j<=100;j++){
					Point p = new Point(i,j);
					RandomEnum<ThingsInRoom> x = new RandomEnum<ThingsInRoom>(ThingsInRoom.class);
					RandomEnum<CleanRoom> y = new RandomEnum<CleanRoom>(CleanRoom.class);
					RoomStatus rs = new RoomStatus(x.random(),y.random());
					
					room.put(p,rs);
					
				}
			}
			Vacuum firstVacuum = new Vacuum("henry", room);
			
			System.out.println(firstVacuum.toString());
			
			
			powerLog.add(PowerCheck.PowerCheck(firstVacuum));
			storageLog.add(StorageCheck.Diagnostic(firstVacuum));
			
	}
	
	private static final RandomEnum<ThingsInRoom> x = new RandomEnum<ThingsInRoom>(ThingsInRoom.class);



private static class RandomEnum<E extends Enum> {

    private static final Random RND = new Random();
    private final E[] values;

    public RandomEnum(Class<E> token) {
        values = token.getEnumConstants();
    }

    public E random() {
        return values[RND.nextInt(values.length)];
    }
}

}